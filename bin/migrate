#!/bin/bash


function abort() {
    echo $* ; exit 1
}

function indent() {
    sed -u "s/^/    /"
}

function display() {
    echo -e "\n-->" $*
}

function abortIfNotAppPath() {
    [ -f "./package.json" ] || abort "Must be run in application directory."
}

case "$1" in

    init)
        abortIfNotAppPath
        [ ! -d "./migrations" ] || abort "Migrations already exist."

        display Initializing migrations...
        (
            mkdir -p ./migrations
            cat > ./migrations/index.js <<EOF
/*
 * Warning: Do not modify this file. This file is auto-generated by mongoose-rolling-migrate.
 */

exports = {
};
EOF
            echo "Created ./migrations/index.js"
        ) | indent

        display Ready to migrate.
        echo "Use 'migrate create <table> <label>' to create your first migration." | indent
        ;;

    destroy)
        abortIfNotAppPath
        read -p "Are you sure you want to permanently delete ALL migrations? [n] " -n 1 -r
        echo
        [[ ! "$REPLY" =~ ^[Yn]$ ]] || abort "Aborting"

        rm -rf ./migrations
        echo "Permanently deleted migrations."
        ;;

    create)
        abortIfNotAppPath
        [ $# -eq 4 ] || abort "Create requires 4 parameters: migrate create <table> <label>"
        ;;

    up)
        abortIfNotAppPath
        [ $# -eq 3 ] || abort "Up requires 3 parameters: migrate up <table>"
        ;;

    down)
        abortIfNotAppPath
        [ $# -eq 3 ] || abort "Down requires 3 parameters: migrate up <table>"
        ;;

    reset)
        abortIfNotAppPath
        [ $# -eq 3 ] || abort "Reset requires 3 parameters: migrate up <table>"
        ;;

    *)
        echo "Usage: migrate <command>"
        echo
        echo "Commands (Init/Destroy)"
        echo "init          initialize migrations"
        echo "destroy       destroy migrations (permanent)"
        echo
        echo "Commands (General Usage)"
        echo "create <table> <label>    create a new migration script"
        echo "up <table>                update <table> to latest version"
        echo "down <table>              rollback <table> once"
        echo "reset <table>             completely rollback <table>"
        echo
        ;;

esac